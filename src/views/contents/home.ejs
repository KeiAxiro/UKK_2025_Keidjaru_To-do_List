<div id="tasks-container">
  <% if (!lists.length) { %>
  <article>
    <div class="row">
      <div class="max">
        <h5>Welcome</h5>
        <p>Create New Task Here!</p>
      </div>
    </div>
    <nav>
      <button @click="isModalAdd = true">Create</button>
    </nav>
  </article>
  <% } %> <% var i=0; lists.forEach(element => { i++; %>
    <article
    id="list-<%= element.id %>"
    x-data="{dragIndicator: false}"
    class="task-card surface-container"
  >
  <%- include('task_card',{element,i}) %>
  
</article>
  <% }) %>
</div>
<script type="module">
  import Swappable from "https://cdn.jsdelivr.net/npm/@shopify/draggable/build/esm/Swappable/Swappable.mjs";

  const tasksContainer = document.querySelector("#tasks-container");

  if (tasksContainer) {
    const swappable = new Swappable(tasksContainer, {
      draggable: ".task-card",
      handle: ".task-header",
      mirror: {
        appendTo: "body",
        constrainDimensions: true,
      },
    });

    // Saat elemen di-drag mendekati elemen lain
    swappable.on("drag:over", (event) => {
      const target = event.over;
      if (target && target.classList.contains("task-card")) {
        target.classList.add("hovered"); // Tambahkan efek glow
      }
    });

    // Saat elemen tidak lagi dekat dengan elemen lain
    swappable.on("drag:out", (event) => {
      const target = event.over;
      if (target && target.classList.contains("task-card")) {
        target.classList.remove("hovered"); // Hapus efek glow
      }
    });

    swappable.on("drag:stop", (event) => {
      const item = event.data.source;
      item.classList.add("dropped");
      setTimeout(() => item.classList.remove("dropped"), 800);
    });

    document.querySelectorAll(".btn-ignore").forEach((button) => {
      ["mousedown", "touchstart"].forEach((eventType) => {
        button.addEventListener(eventType, (event) => {
          event.stopPropagation();
        });
      });
    });
  }
</script>
